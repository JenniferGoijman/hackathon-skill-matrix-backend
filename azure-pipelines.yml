# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

pr:
  branches:
    include:
      - master
  drafts: false

resources:
  containers:
  - container: postgres
    ports:
      - 5432:5432
    image: postgres:12-alpine
    container_name: postgress-db
    env:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres

services:
  postgres: postgres

pool:
  vmImage: ubuntu-latest

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '14.x'
  displayName: 'Install Node.js'

- script: |
    npm install
  displayName: 'npm install'

- script: |
    npm run lint
  displayName: 'npm run lint'

- script: |
    npm run test:report
  displayName: 'npm test'

- task: PublishTestResults@2
  displayName: 'test: publish report'
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '**/junit.xml'
    failTaskOnFailedTests: true

- task: SonarCloudPrepare@1
  displayName: "sonarcloud: prepare analysis"
  inputs:
    SonarCloud: 'dcslgs-sonarcloud'
    organization: 'dcslgs-spain'
    scannerMode: 'CLI'
    configMode: 'manual'
    cliProjectKey: 'skill-matrix-backend'
    cliProjectName: $(Build.Repository.Name)
    cliSources: "."
    extraProperties: |
      sonar.sources=.
      sonar.exclusions=node_modules/**,test/**,docs/**,components/logging/*,components/routes/schema/*,*.config.js,system.js,config/*
      sonar.language=js
      sonar.projectVersion=$(Build.BuildNumber)
      sonar.javascript.lcov.reportPaths=lcov.info

- task: SonarCloudAnalyze@1
  displayName: 'sonarcloud: run analysis'

- task: SonarCloudPublish@1
  displayName: 'sonarcloud: publish analysis'

- task: ArchiveFiles@2
  # run only in master branch
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
  inputs:
    rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true

- task: PublishBuildArtifacts@1
  # run only in master branch
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
